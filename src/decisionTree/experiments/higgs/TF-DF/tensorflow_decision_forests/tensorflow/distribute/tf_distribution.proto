/*
 * Copyright 2021 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package yggdrasil_decision_forests.distribute.proto;

import "yggdrasil_decision_forests/utils/distribute/distribute.proto";

// Specialization of the configuration of a Yggdrasil Decision Forests
// Distribute manager using TensorFlow distributed computation.
//
// To add support for distribution you have to link in ":register_ops",
// ":tf_dist_py_worker" and "tensorflow_std_server".
message TfDistribution {
  oneof worker_address {
    // List of network addresses.
    Addresses addresses = 1;

    // Use the TF_CONFIG variable to configure the workers i.e. a serialized
    // JSON configuration. See
    // https://www.tensorflow.org/guide/distributed_training#setting_up_the_tf_config_environment_variable
    EnvironmentVariable environment_variable = 2;
  }

  message Addresses {
    // Network addresses e.g. "127.0.0.1:1234"
    // Support schema url notation to specify the protocol e.g.
    // "grpc://bns_address".
    repeated string addresses = 1;
  }

  // Configuration of the worker using the TF_CONFIG environment variable.
  message EnvironmentVariable {}
}

extend Config {
  optional TfDistribution tf_distribution = 1002;
}
